[
    {
        "test": {
            "message": "It should return foods that title include query"
        },
        "input": {
            "body": {
                "query": "TÃ´m"
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that author include user(s) and exclude user(s)"
        },
        "input": {
            "body": {
                "user": {
                    "include": [
                        "66252db3dce942e19b422a8e"
                    ],
                    "exclude": [
                        "66252db3dce942e19b422a8f"
                    ]
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that author include user(s)"
        },
        "input": {
            "body": {
                "user": {
                    "include": [
                        "66252db3dce942e19b422a8e"
                    ]
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that author exclude user(s)"
        },
        "input": {
            "body": {
                "user": {
                    "exclude": [
                        "66252db3dce942e19b422a8f"
                    ]
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that posted by a place, include place(s) and exclude place(s)"
        },
        "input": {
            "body": {
                "place": {
                    "include": [
                        "66252e1e6e79b2222b6c72af"
                    ],
                    "exclude": [
                        "66252e1e6e79b2222b6c72b0"
                    ]
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that posted by a place, ixclude place(s)"
        },
        "input": {
            "body": {
                "place": {
                    "include": [
                        "66252e1e6e79b2222b6c72af"
                    ]
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that posted by a place, exclude place(s)"
        },
        "input": {
            "body": {
                "place": {
                    "exclude": [
                        "66252e1e6e79b2222b6c72b0"
                    ]
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that have distance from position maximumn x (kms)"
        },
        "input": {
            "body": {
                "distance": {
                    "max": 10,
                    "current": {
                        "lat": 21.040621,
                        "lng": 105.777413
                    }
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that have only category(s)"
        },
        "input": {
            "body": {
                "category": [
                    "ANIMAL_PRODUCT",
                    "SALADS"
                ]
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that not depend on category(s)"
        },
        "input": {
            "body": {
                "category": []
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that have price in range [min, max]"
        },
        "input": {
            "body": {
                "price": {
                    "min": 10000,
                    "max": 50000
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that have price in range [min, +infinity]"
        },
        "input": {
            "body": {
                "price": {
                    "min": 10000
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that have price in range [-infinity, max]"
        },
        "input": {
            "body": {
                "price": {
                    "max": 50000
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that added by personal (not place)"
        },
        "input": {
            "body": {
                "addedBy": [
                    0
                ]
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that added by volunteer place (type=1)"
        },
        "input": {
            "body": {
                "addedBy": [
                    1
                ]
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that added by eatery place (type=2)"
        },
        "input": {
            "body": {
                "addedBy": [
                    2
                ]
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that added by restaurant place (type=4)"
        },
        "input": {
            "body": {
                "addedBy": [
                    4
                ]
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that added by supermarket place (type=8)"
        },
        "input": {
            "body": {
                "addedBy": [
                    8
                ]
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that added by grocery place (type=16)"
        },
        "input": {
            "body": {
                "addedBy": [
                    16
                ]
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that resolved"
        },
        "input": {
            "body": {
                "resolved": true
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that not resolved"
        },
        "input": {
            "body": {
                "resolved": false
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that resolved by include user(s) and exclude user(s)"
        },
        "input": {
            "body": {
                "resolveBy": {
                    "include": [
                        "66252db3dce942e19b422a8e"
                    ],
                    "exclude": [
                        "66252db3dce942e19b422a8f"
                    ]
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that resolved by include user(s)"
        },
        "input": {
            "body": {
                "resolveBy": {
                    "include": [
                        "66252db3dce942e19b422a8e"
                    ]
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that resolved by exclude user(s)"
        },
        "input": {
            "body": {
                "resolveBy": {
                    "exclude": [
                        "66252db3dce942e19b422a8f"
                    ]
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that currently active"
        },
        "input": {
            "body": {
                "active": true
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that currently not active"
        },
        "input": {
            "body": {
                "active": false
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that posted in time range [from, to]"
        },
        "input": {
            "body": {
                "time": {
                    "from": 1715778597636,
                    "to": 1.7163834e+12
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that posted in time range [from, +infinity]"
        },
        "input": {
            "body": {
                "time": {
                    "from": 1715778597636
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that posted in time range [-infinity, to]"
        },
        "input": {
            "body": {
                "time": {
                    "to": 1.7163834e+12
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that duration in time range [from, to]"
        },
        "input": {
            "body": {
                "duration": {
                    "from": 1715778597636,
                    "to": 1.7163834e+12
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that duration in duration range [from, +infinity]"
        },
        "input": {
            "body": {
                "duration": {
                    "from": 1715778597636
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that duration in duration range [-infinity, to]"
        },
        "input": {
            "body": {
                "duration": {
                    "to": 1.7163834e+12
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that quantity in range [min, max]"
        },
        "input": {
            "body": {
                "quantity": {
                    "min": 2,
                    "max": 4
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that quantity in range [min, +infinity]"
        },
        "input": {
            "body": {
                "quantity": {
                    "min": 2
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that quantity in range [-infinity, max]"
        },
        "input": {
            "body": {
                "quantity": {
                    "max": 2
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return maximumn limit food(s)"
        },
        "input": {
            "body": {
                "pagination": {
                    "skip": 0,
                    "limit": 10
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that order by time descrease"
        },
        "input": {
            "body": {
                "order": {
                    "time": -1
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that order by time increase"
        },
        "input": {
            "body": {
                "order": {
                    "time": 1
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that order by distance decrease"
        },
        "input": {
            "body": {
                "order": {
                    "distance": -1
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that order by distance increase"
        },
        "input": {
            "body": {
                "order": {
                    "distance": 1
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that order by price decrease"
        },
        "input": {
            "body": {
                "order": {
                    "price": -1
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that order by price increase"
        },
        "input": {
            "body": {
                "order": {
                    "price": 1
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that order by quantity decrease"
        },
        "input": {
            "body": {
                "order": {
                    "quantity": -1
                }
            }
        }
    },
    {
        "test": {
            "message": "It should return foods that order by quantity increase"
        },
        "input": {
            "body": {
                "order": {
                    "quantity": 1
                }
            }
        }
    },
    {
        "test": {
            "message": "It does not depend on any filter options"
        },
        "input": {
            "body": {}
        }
    }
]