{"apidogProject":"1.0.0","$schema":{"app":"apidog","type":"project","version":"1.2.0"},"info":{"name":"My Project","description":"","mockRule":{}},"apiCollection":[{"name":"Root","id":1310425,"auth":{},"parentId":0,"serverId":"","description":"","identityPattern":{"httpApi":{"type":"methodAndPath","bodyType":"","fields":[]}},"preProcessors":[{"id":"inheritProcessors","type":"inheritProcessors","data":{}}],"postProcessors":[{"id":"inheritProcessors","type":"inheritProcessors","data":{}}],"inheritPostProcessors":{},"inheritPreProcessors":{},"items":[{"name":"CommuniFood API","id":1310508,"auth":{},"parentId":0,"serverId":"","description":"","identityPattern":{"httpApi":{"type":"inherit","bodyType":"","fields":[]}},"preProcessors":[{"id":"inheritProcessors","type":"inheritProcessors","data":{}}],"postProcessors":[{"id":"inheritProcessors","type":"inheritProcessors","data":{}}],"inheritPostProcessors":{},"inheritPreProcessors":{},"items":[{"name":"Login","api":{"id":"7241979","method":"post","path":"{{gateway}}/{{user_service}}/users/login","parameters":{"path":[],"query":[{"id":"JJyTrz5XHq","name":"method","required":true,"description":"","example":"manual","type":"string"}],"cookie":[],"header":[]},"auth":{},"commonParameters":{},"responses":[{"id":"7265276","name":"Success","code":200,"contentType":"json","jsonSchema":{"type":"object","properties":{},"x-apidog-orders":[]}}],"responseExamples":[],"requestBody":{"type":"application/json","parameters":[],"jsonSchema":{"type":"object","properties":{"email":{"type":"string"},"password":{"type":"string"}},"required":["email","password"],"x-apidog-orders":["email","password"]},"example":"{\r\n    \"email\": \"gv.huy.2002@gmail.com\",\r\n    \"password\": \"Sharefood@2024\"\r\n}"},"description":"","tags":[],"status":"released","serverId":"8a6b3c5e6ba4da6ebfdf08b068ca74f7d99ed161","operationId":"","sourceUrl":"","ordering":0,"cases":[{"id":8908669,"type":"http","path":null,"name":"Success","responseId":7265276,"parameters":{"path":[],"query":[{"name":"method","value":"manual","enable":true,"id":"PIH3zuNFuR","relatedName":"method"}],"cookie":[],"header":[]},"commonParameters":{},"requestBody":{"parameters":[],"data":"{\r\n    \"email\": \"gv.huy.2002@gmail.com\",\r\n    \"password\": \"Sharefood@2024\"\r\n}","type":"application/json","generateMode":"normal"},"auth":{},"advancedSettings":{"disabledSystemHeaders":{}},"requestResult":null,"preProcessors":[],"postProcessors":[],"inheritPostProcessors":{},"inheritPreProcessors":{}}],"mocks":[],"customApiFields":"{}","advancedSettings":{"disabledSystemHeaders":{}},"mockScript":{},"codeSamples":[],"commonResponseStatus":{},"responseChildren":["BLANK.7265276"],"preProcessors":[],"postProcessors":[{"data":"const jsonData = pm.response.json();\r\ntry {\r\n    const token = jsonData.data.token;\r\n    pm.environment.set(\"token\", token);\r\n} catch (err) {\r\n    console.error(err)\r\n}\r\n","type":"customScript","defaultEnable":true,"enable":true,"id":"fDTopxobKJQF5tOW8MUKDPE3BQ5k9krM"}],"inheritPostProcessors":{},"inheritPreProcessors":{}}},{"name":"Search Food","api":{"id":"7242287","method":"post","path":"{{gateway}}/{{food_service}}/foods/search","parameters":{"query":[],"path":[],"cookie":[],"header":[{"id":"MX4MnmcLDG","name":"Authorization","required":true,"description":"","example":"{{token}}","type":"string","enable":true},{"required":true,"description":"","type":"string","id":"XO953xoCUA","example":"application/json","enable":true,"name":"Content-Type"}]},"auth":{},"commonParameters":{"query":[],"body":[],"cookie":[],"header":[]},"responses":[{"id":"7266940","name":"Success","code":200,"contentType":"json","jsonSchema":{"type":"object","properties":{},"x-apidog-orders":[]}}],"responseExamples":[],"requestBody":{"type":"text/plain","parameters":[],"jsonSchema":{"type":"object","properties":{},"x-apidog-orders":[]},"example":"{{body}}"},"description":"","tags":[],"status":"released","serverId":"8a6b3c5e6ba4da6ebfdf08b068ca74f7d99ed161","operationId":"","sourceUrl":"","ordering":6,"cases":[],"mocks":[],"customApiFields":"{}","advancedSettings":{"disabledSystemHeaders":{}},"mockScript":{},"codeSamples":[],"commonResponseStatus":{},"responseChildren":["BLANK.7266940"],"preProcessors":[{"data":"const input = JSON.parse(data.input);\r\nconst body = input.body;\r\npm.variables.set('body', JSON.stringify(body));","type":"customScript","defaultEnable":true,"enable":true,"id":"OrN2Q3HEZWargYPCQilup","executionTiming":"prerequest"}],"postProcessors":[{"data":"const toUserId = (v) => {\r\n    if (v == null) return \"NO_USER_FOUND\";\r\n    if (typeof v === \"object\") return v._id;\r\n    else return v;\r\n}\r\n\r\nconst toPlaceId = (v) => {\r\n    if (v == null) return \"NO_PLACE_FOUND\";\r\n    if (typeof v === \"object\") return v._id;\r\n    else return v;\r\n}\r\n\r\nconst toDistance = (coors1, coors2) => {\r\n    const { lat: lat1, lng: lon1 } = coors1;\r\n    const { lat: lat2, lng: lon2 } = coors2;\r\n    const toRadians = (deg) => deg * (Math.PI / 180);\r\n    const R = 6371;\r\n    const φ1 = toRadians(lat1);\r\n    const φ2 = toRadians(lat2);\r\n    const Δφ = toRadians(lat2 - lat1);\r\n    const Δλ = toRadians(lon2 - lon1);\r\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n        Math.cos(φ1) * Math.cos(φ2) *\r\n        Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    const distance = R * c;\r\n    return distance;\r\n}\r\n\r\nconst isCorrectOrder = (arr, order) => {\r\n    if (order === -1) {\r\n        return arr.sort((a, b) => a > b).join(\"|\") === arr.join(\"|\");\r\n    }\r\n    if (order === 1) {\r\n        return arr.sort((a, b) => a < b).join(\"|\") === arr.join(\"|\");\r\n    }\r\n    return true;\r\n}\r\n\r\nconst isCorrectAddedBy = (data, addedBy) => {\r\n    if (addedBy == null || addedBy.length === 0) return true;\r\n    let result = false;\r\n    // Personal\r\n    if (addedBy.includes(0)) {\r\n        result ||= data.place == null;\r\n    }\r\n    if (data.place != null && typeof data.place === \"object\") {\r\n        result ||= addedBy.includes(data.place.type);\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\n\r\npm.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Response time is less than 2000ms\", function () {\r\n    pm.expect(pm.response.responseTime).to.be.below(2000);\r\n});\r\n\r\nconst input = JSON.parse(data.input);\r\nconst body = input.body;\r\nconst { user, place, query, distance, category, maxDuration, price, minQuantity, addedBy, available, order, populate, resolved, resolveBy, pagination, active } = body;\r\n\r\nif (pagination != null) {\r\n    pm.test(\"Response should not include over number of food(s)\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.length).to.lte(pagination.limit);\r\n    });\r\n}\r\n\r\nif (user?.include != null) {\r\n    const include = user.include;\r\n    pm.test(\"Response should include only user(s)\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => include.includes(toUserId(d.user)))).to.be.true;\r\n    });\r\n}\r\n\r\nif (user?.exclude != null) {\r\n    const exclude = user.exclude;\r\n    pm.test(\"Response should exclude user(s)\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => !exclude.includes(toUserId(d.user)))).to.be.true;\r\n    });\r\n}\r\n\r\nif (place?.include != null) {\r\n    const include = place.include;\r\n    pm.test(\"Response should include only place(s)\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => include.includes(toPlaceId(d.place)))).to.be.true;\r\n    });\r\n}\r\n\r\nif (place?.exclude != null) {\r\n    const exclude = place.exclude;\r\n    pm.test(\"Response should exclude place(s)\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => !exclude.includes(toPlaceId(d.place)))).to.be.true;\r\n    });\r\n}\r\n\r\nif (distance != null) {\r\n    const { max, current } = distance;\r\n    if (max != null && current != null) {\r\n        pm.test(\"Response should have distance less than km(s)\", function () {\r\n            var jsonData = pm.response.json();\r\n            pm.expect(jsonData.data.every(d => toDistance(current, d.location.coordinates) <= max)).to.be.true;\r\n        });\r\n    }\r\n}\r\n\r\nif (category != null && category.length > 0) {\r\n    pm.test(\"Response should have only category(s)\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => d.categories.some(c => category.includes(c)))).to.be.true;\r\n    });\r\n}\r\n\r\nif (maxDuration != null) {\r\n    pm.test(\"Response should have duration less than\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => new Date(d.duration).getTime() < maxDuration)).to.be.true;\r\n    });\r\n}\r\n\r\nif (price != null) {\r\n    const { min, max } = price;\r\n    if (min != null) {\r\n        pm.test(\"Response should have price greater or equal than\", function () {\r\n            var jsonData = pm.response.json();\r\n            pm.expect(jsonData.data.every(d => d.price >= min)).to.be.true;\r\n        });\r\n    }\r\n    if (max != null) {\r\n        pm.test(\"Response should have price less or equal than\", function () {\r\n            var jsonData = pm.response.json();\r\n            pm.expect(jsonData.data.every(d => d.price <= max)).to.be.true;\r\n        });\r\n    }\r\n}\r\n\r\nif (minQuantity != null) {\r\n    pm.test(\"Response should have quantity greater or equal than\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => d.quantity >= minQuantity)).to.be.true;\r\n    });\r\n}\r\n\r\nif (available != null) {\r\n    const isValidAvailable = (data) => {\r\n        if (available === \"AVAIABLE_ONLY\") return new Date(data.duration).getTime() >= Date.now()\r\n        if (available === \"JUST_GONE\") return new Date(data.duration).getTime() < Date.now()\r\n        return true;\r\n    }\r\n    pm.test(\"Response should have correct available\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => isValidAvailable(d))).to.be.true;\r\n    });\r\n}\r\n\r\nif (addedBy != null && addedBy.length > 0) {\r\n    pm.test(\"Response should have correct addedBy\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => isCorrectAddedBy(d, addedBy))).to.be.true;\r\n    });\r\n}\r\n\r\nif (resolved != null) {\r\n    pm.test(\"Response should have right resolved\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => d.resolved === resolved)).to.be.true;\r\n    });\r\n}\r\n\r\nif (resolveBy != null) {\r\n    const { include, exclude } = resolveBy;\r\n    if (include != null) {\r\n        pm.test(\"Response should resolved by user(s)\", function () {\r\n            var jsonData = pm.response.json();\r\n            pm.expect(jsonData.data.every(d => !include.includes(d.resolveBy))).to.be.true;\r\n        });\r\n    }\r\n    if (exclude != null) {\r\n        pm.test(\"Response should not resolved by user(s)\", function () {\r\n            var jsonData = pm.response.json();\r\n            pm.expect(jsonData.data.every(d => !exclude.includes(d.resolveBy))).to.be.true;\r\n        });\r\n    }\r\n}\r\n\r\nif (active != null) {\r\n    pm.test(\"Response should have rigth active\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => d.active === active)).to.be.true;\r\n    });\r\n}\r\n\r\nif (order != null) {\r\n    const { relative, distance, time, price, quantity } = order;\r\n    if ((query == null || query.length === 0) && distance != null) {\r\n        if (distance && data.distance && data.distance.current) {\r\n            pm.test(\"Response should correct order distance\", function () {\r\n                var jsonData = pm.response.json();\r\n                const distances = jsonData.data.map(d => toDistance(d.location.coordinates, distance.current));\r\n                pm.expect(isCorrectOrder(distances, distance)).to.be.true;\r\n            });\r\n        }\r\n        if (time) {\r\n            pm.test(\"Response should correct order time\", function () {\r\n                var jsonData = pm.response.json();\r\n                const createdAts = jsonData.data.map(d => new Date(d.createdAt).getTime());\r\n                pm.expect(isCorrectOrder(createdAts, time)).to.be.true;\r\n            });\r\n        }\r\n        if (price) {\r\n            pm.test(\"Response should correct order price\", function () {\r\n                var jsonData = pm.response.json();\r\n                const prices = jsonData.data.map(d => d.price);\r\n                pm.expect(isCorrectOrder(prices, price)).to.be.true;\r\n            });\r\n        }\r\n        if (quantity) {\r\n            pm.test(\"Response should correct order quantity\", function () {\r\n                var jsonData = pm.response.json();\r\n                const quantities = jsonData.data.map(d => d.quantity);\r\n                pm.expect(isCorrectOrder(quantities, quantity)).to.be.true;\r\n            });\r\n        }\r\n    }\r\n}","type":"customScript","defaultEnable":true,"enable":true,"id":"R4AS7IPf9ck4SMZ8QAr7k"}],"inheritPostProcessors":{},"inheritPreProcessors":{}}},{"name":"Share food","api":{"id":"7242342","method":"post","path":"{{gateway}}/{{food_service}}/foods","parameters":{"path":[],"query":[],"cookie":[],"header":[{"required":false,"description":"","type":"string","id":"jImKF7rCDs","example":"{{token}}","enable":true,"name":"Authorization"}]},"auth":{},"commonParameters":{"query":[],"body":[],"cookie":[],"header":[]},"responses":[{"id":"7266672","name":"Success","code":200,"contentType":"json","jsonSchema":{"type":"object","properties":{},"x-apidog-orders":[]}}],"responseExamples":[],"requestBody":{"type":"text/plain","parameters":[],"jsonSchema":{"type":"object","properties":{},"x-apidog-orders":[]},"example":"{{body}}"},"description":"","tags":[],"status":"testing","serverId":"8a6b3c5e6ba4da6ebfdf08b068ca74f7d99ed161","operationId":"","sourceUrl":"","ordering":6,"cases":[{"id":8909328,"type":"http","path":null,"name":"Success","responseId":7266672,"parameters":{"path":[],"query":[],"cookie":[],"header":[]},"commonParameters":{},"requestBody":{"parameters":[],"data":"{{body}}","type":"application/json","generateMode":"normal"},"auth":{},"advancedSettings":{"disabledSystemHeaders":{}},"requestResult":null,"preProcessors":[],"postProcessors":[],"inheritPostProcessors":{},"inheritPreProcessors":{}}],"mocks":[],"customApiFields":"{}","advancedSettings":{"disabledSystemHeaders":{}},"mockScript":{},"codeSamples":[],"commonResponseStatus":{},"responseChildren":["BLANK.7266672"],"preProcessors":[{"data":"const input = JSON.parse(data.input);\r\nconst body = input.body;\r\npm.variables.set('body', JSON.stringify(body));","type":"customScript","defaultEnable":true,"enable":true,"id":"rCU8UZISu6lqJobA8ql-m","executionTiming":"prerequest"}],"postProcessors":[{"data":"const input = JSON.parse(data.input);\r\nconst test = JSON.parse(data.test);\r\nconst body = input.body;\r\n\r\npm.test(\"Response time is less than 2000ms\", function () {\r\n    pm.expect(pm.response.responseTime).to.be.below(2000);\r\n});\r\n\r\nconst { message, result, code } = test;\r\npm.test(`Status code is ${code}: ${message}`, function () {\r\n    pm.response.to.have.status(code);\r\n});\r\n","type":"customScript","defaultEnable":true,"enable":true,"id":"MMubZsoJroZ9PVSSvhoPF"}],"inheritPostProcessors":{},"inheritPreProcessors":{}}},{"name":"Search Place","api":{"id":"7242347","method":"post","path":"{{gateway}}/{{user_service}}/places/search","parameters":{"query":[],"path":[],"cookie":[],"header":[{"required":false,"description":"","type":"string","id":"8jJv9iI8VS","example":"{{token}}","enable":true,"name":"Authorization"}]},"auth":{},"commonParameters":{"query":[],"body":[],"cookie":[],"header":[]},"responses":[{"id":"7266931","name":"Success","code":200,"contentType":"json","jsonSchema":{"type":"object","properties":{},"x-apidog-orders":[]}}],"responseExamples":[],"requestBody":{"type":"application/json","parameters":[],"jsonSchema":{"type":"object","properties":{},"x-apidog-orders":[]},"example":"{{body}}"},"description":"","tags":[],"status":"released","serverId":"8a6b3c5e6ba4da6ebfdf08b068ca74f7d99ed161","operationId":"","sourceUrl":"","ordering":6,"cases":[{"id":8909337,"type":"http","path":null,"name":"Success","responseId":7266931,"parameters":{"path":[],"query":[],"cookie":[],"header":[]},"commonParameters":{},"requestBody":{"parameters":[],"data":"{{body}}","type":"application/json","generateMode":"normal"},"auth":{},"advancedSettings":{"disabledSystemHeaders":{}},"requestResult":null,"preProcessors":[],"postProcessors":[],"inheritPostProcessors":{},"inheritPreProcessors":{}}],"mocks":[],"customApiFields":"{}","advancedSettings":{"disabledSystemHeaders":{}},"mockScript":{},"codeSamples":[],"commonResponseStatus":{},"responseChildren":["BLANK.7266931"],"preProcessors":[{"data":"const input = JSON.parse(data.input);\r\nconst body = input.body;\r\npm.variables.set('body', JSON.stringify(body));","type":"customScript","defaultEnable":true,"enable":true,"id":"VZy1I8vkWwFwj9L07tY1z","executionTiming":"prerequest"}],"postProcessors":[{"data":"const isCorrectOrder = (arr, order) => {\r\n    if (order === -1) {\r\n        return arr.sort((a, b) => a > b).join(\"|\") === arr.join(\"|\");\r\n    }\r\n    if (order === 1) {\r\n        return arr.sort((a, b) => a < b).join(\"|\") === arr.join(\"|\");\r\n    }\r\n    return true;\r\n}\r\n\r\nconst toUserId = (v) => {\r\n    if (v == null) return \"NO_USER_FOUND\";\r\n    if (typeof v === \"object\") return v._id;\r\n    else return v;\r\n}\r\n\r\nconst toPlaceId = (v) => {\r\n    if (v == null) return \"NO_PLACE_FOUND\";\r\n    if (typeof v === \"object\") return v._id;\r\n    else return v;\r\n}\r\n\r\nconst toDistance = (coors1, coors2) => {\r\n    const { lat: lat1, lng: lon1 } = coors1;\r\n    const { lat: lat2, lng: lon2 } = coors2;\r\n    const toRadians = (deg) => deg * (Math.PI / 180);\r\n    const R = 6371;\r\n    const φ1 = toRadians(lat1);\r\n    const φ2 = toRadians(lat2);\r\n    const Δφ = toRadians(lat2 - lat1);\r\n    const Δλ = toRadians(lon2 - lon1);\r\n    const a = Math.sin(Δφ / 2) * Math.sin(Δφ / 2) +\r\n        Math.cos(φ1) * Math.cos(φ2) *\r\n        Math.sin(Δλ / 2) * Math.sin(Δλ / 2);\r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\r\n    const distance = R * c;\r\n    return distance;\r\n}\r\n\r\n\r\npm.test(\"Status code is 200\", function () {\r\n    pm.response.to.have.status(200);\r\n});\r\n\r\npm.test(\"Response time is less than 2000ms\", function () {\r\n    pm.expect(pm.response.responseTime).to.be.below(2000);\r\n});\r\n\r\nconst input = JSON.parse(data.input);\r\nconst body = input.body;\r\nconst { pagination, query, author, distance, order, types, rating, active } = body;\r\n\r\nif (pagination != null) {\r\n    pm.test(\"Response should not include over number of food(s)\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.length).to.lte(pagination.limit);\r\n    });\r\n}\r\n\r\nif (author != null) {\r\n    const { include, exclude } = author;\r\n    if (include != null) {\r\n        pm.test(\"Response should include only author(s)\", function () {\r\n            var jsonData = pm.response.json();\r\n            pm.expect(jsonData.data.every(d => include.includes(toUserId(d.author)))).to.be.true;\r\n        });\r\n    }\r\n\r\n    if (exclude != null) {\r\n        pm.test(\"Response should exclude author(s)\", function () {\r\n            var jsonData = pm.response.json();\r\n            pm.expect(jsonData.data.every(d => !exclude.includes(toUserId(d.author)))).to.be.true;\r\n        });\r\n    }\r\n}\r\n\r\nif (distance != null) {\r\n    const { max, current } = distance;\r\n    if (max != null && current != null) {\r\n        pm.test(\"Response should have distance less than km(s)\", function () {\r\n            var jsonData = pm.response.json();\r\n            pm.expect(jsonData.data.every(d => toDistance(current, d.location.coordinates) <= max)).to.be.true;\r\n        });\r\n    }\r\n}\r\n\r\nif (active != null) {\r\n    pm.test(\"Response should have rigth active\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => d.active === active)).to.be.true;\r\n    });\r\n}\r\n\r\nif (types != null && types.length > 0) {\r\n    pm.test(\"Response should correct type(s)\", function () {\r\n        var jsonData = pm.response.json();\r\n        pm.expect(jsonData.data.every(d => types.include(d.type))).to.be.true;\r\n    });\r\n}\r\n\r\n\r\nif (order != null) {\r\n    const { distance, time, rating } = order;\r\n    if ((query == null || query.length === 0) && distance != null) {\r\n        if (distance && data.distance && data.distance.current) {\r\n            pm.test(\"Response should correct order distance\", function () {\r\n                var jsonData = pm.response.json();\r\n                const distances = jsonData.data.map(d => toDistance(d.location.coordinates, distance.current));\r\n                pm.expect(isCorrectOrder(distances, distance)).to.be.true;\r\n            });\r\n        }\r\n        if (time) {\r\n            pm.test(\"Response should correct order time\", function () {\r\n                var jsonData = pm.response.json();\r\n                const createdAts = jsonData.data.map(d => new Date(d.createdAt).getTime());\r\n                pm.expect(isCorrectOrder(createdAts, time)).to.be.true;\r\n            });\r\n        }\r\n    }\r\n}","type":"customScript","defaultEnable":true,"enable":true,"id":"olUQPElIJvd71iZwkZTnH"}],"inheritPostProcessors":{},"inheritPreProcessors":{}}}]}]}],"socketCollection":[],"docCollection":[],"schemaCollection":[{"name":"Root","items":[{"name":"Sample Schemas","items":[{"name":"Pet","displayName":"","id":"#/definitions/2062411","description":"","schema":{"jsonSchema":{"required":["name","photoUrls","id","category","tags","status"],"type":"object","properties":{"id":{"type":"integer","format":"int64","minimum":1,"description":"Pet ID"},"category":{"$ref":"#/definitions/2062412","description":"group"},"name":{"type":"string","description":"name","examples":["doggie"]},"photoUrls":{"type":"array","items":{"type":"string"},"description":"image URL"},"tags":{"type":"array","items":{"$ref":"#/definitions/2062413"},"description":"tag"},"status":{"type":"string","description":"Pet Sales Status","enum":["available","pending","sold"]}},"x-apidog-orders":["id","category","name","photoUrls","tags","status"]}}},{"name":"Category","displayName":"","id":"#/definitions/2062412","description":"","schema":{"jsonSchema":{"type":"object","properties":{"id":{"type":"integer","format":"int64","minimum":1,"description":"Category ID"},"name":{"type":"string","description":"Category Name"}},"x-apidog-orders":["id","name"]}}},{"name":"Tag","displayName":"","id":"#/definitions/2062413","description":"","schema":{"jsonSchema":{"type":"object","properties":{"id":{"type":"integer","format":"int64","minimum":1,"description":"Tag ID"},"name":{"type":"string","description":"Tag Name"}},"x-apidog-orders":["id","name"]}}}]}]}],"responseCollection":[{"id":536490,"createdAt":"2024-05-10T14:33:22.000Z","updatedAt":"2024-05-10T14:33:22.000Z","deletedAt":null,"name":"Root","type":"root","description":"","children":[],"auth":{},"projectId":534306,"projectBranchId":0,"parentId":0,"createdById":457981,"updatedById":457981,"items":[{"_databaseId":2478319,"name":"Record not found","code":404,"contentType":"json","jsonSchema":{"type":"object","properties":{"code":{"type":"integer"},"message":{"type":"string"}},"required":["code","message"],"x-apidog-orders":["code","message"]},"defaultEnable":false,"folderId":0,"id":2478319,"databaseResponseExamples":[],"responseExamples":[]},{"_databaseId":2478320,"name":"Invalid input","code":400,"contentType":"json","jsonSchema":{"type":"object","properties":{"code":{"type":"integer"},"message":{"type":"string"}},"required":["code","message"],"x-apidog-orders":["code","message"]},"defaultEnable":false,"folderId":0,"id":2478320,"databaseResponseExamples":[],"responseExamples":[]}]}],"environments":[{"name":"CommuniFood Test","parameters":{"cookie":[],"query":[],"header":[],"body":[]},"variables":[{"name":"token","value":"","description":"","initialValue":"","isSync":true},{"name":"user_service","value":"api/user","description":"","initialValue":"api/user","isSync":true},{"name":"food_service","value":"api/food","description":"","initialValue":"api/food","isSync":true},{"name":"gateway","value":"http://localhost:80","description":"","initialValue":"http://localhost:80","isSync":true}],"type":"normal","visibility":"protected","ordering":0,"tags":[{"name":"","color":"#9373EE"}],"id":"1328250","baseUrl":"","baseUrls":{"default":"","8a6b3c5e6ba4da6ebfdf08b068ca74f7d99ed161":""}}],"commonScripts":[],"globalVariables":[{"id":"534306","variables":[]}],"commonParameters":null,"projectSetting":{"id":"534325","auth":{},"servers":[{"id":"default","name":"Default Server"},{"id":"8a6b3c5e6ba4da6ebfdf08b068ca74f7d99ed161","name":"gateway"}],"gateway":[],"language":"en-US","apiStatuses":["developing","testing","released","deprecated"],"mockSettings":{},"preProcessors":[],"postProcessors":[],"advancedSettings":{},"initialDisabledMockIds":[],"cloudMock":{"security":"free","enable":false,"tokenKey":"apidogToken"}},"projectAssociations":[]}